# syntax=docker/dockerfile:1

##
## Build the application from source
##

FROM golang:1.19 AS build-stage

WORKDIR /app

COPY go.mod go.sum ./
RUN go mod download

COPY *.go ./

RUN CGO_ENABLED=0 GOOS=linux go build -o /docker-go-ping

##
## Run the tests in the container
##

FROM build-stage AS run-test-stage
RUN go test -v ./...

##
## Deploy the application binary into a lean image
##

FROM gcr.io/distroless/base-debian11 AS build-release-stage

WORKDIR /

COPY --from=build-stage /docker-go-ping /docker-go-ping

EXPOSE 8080

USER nonroot:nonroot

CMD ["/docker-go-ping"]

# Example how to ...
### docker build -t my-go-dockerfile:debian -f Dockerfile.alpine .
### docker run -d -p 8085:8080 --name my-go-container my-go-dockerfile:debian